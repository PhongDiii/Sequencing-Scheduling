/*********************************************
 * OPL 12.9.0.0 Model
 * Author: 
 * Creation Date: Jun 10, 2020 at 9:44:13 AM
 *********************************************/
using CP;
int nbJob=3;
int nbSta=4;

tuple Node{
int station;
int job;
}
tuple SolidArc{
int job;
int pre;
int suc;
}
/*
Job 1: 1-2-3
Job 2: 2-1-4-3
Job 3: 1-2-4
*/
{Node} NodeSet={<1,1>,<2,1>,<3,1>,
				<2,2>,<1,2>,<4,2>,<3,2>,
				<1,3>,<2,3>,<4,3>};
{SolidArc} SolidArcSet={<1,1,2>,<1,2,3>,
						<2,2,1>,<2,1,4>,<2,4,3>,
						<3,1,2>,<3,2,4>};
range Job=1..nbJob;
range Sta=1..nbSta;
int ProTime[NodeSet]=[10,8,4,8,3,5,6,4,7,3];
int nbMach[Sta]=[2,2,2,2];
dvar interval X[r in NodeSet] in 0..30 size ProTime[r] ;
dvar sequence seqS[s in Sta] in all(<s,j> in NodeSet)X[<s,j>];
dvar sequence seqJ[j in Job] in all(<s,j> in NodeSet)X[<s,j>];
cumulFunction f[s in Sta]=sum(<s,j> in NodeSet)pulse(X[<s,j>],1);
dvar int+ Cmax;
execute SETTING{
cp.param.TimeLimit=3*60;
}
minimize Cmax;
subject to{
Cmax==max(n in NodeSet )endOf(X[n]);
forall(s in Sta){
f[s]<=nbMach[s];
}

forall(<j,p,s> in SolidArcSet){
before(seqJ[j],X[<p,j>],X[<s,j>]);
}

forall(j in Job){
noOverlap(seqJ[j]);
}
}


